In progress:
- salesforce.module
- salesforce_mapping

@TODOS
- rewrite all tests for D8

- Need interfaces for entites and classes:
  - SalesforceClientInterface
  - SalesforceMappingInterface
  - SalesforceMappedObjectInterface
  - SalesforceMappingFieldPluginManagerInterface

- Need to build an entity definition for Salesforce Objects as defined by instance schema

- extend mapping plugins to be able to override all aspects of field mappings

- Modules yet untouched:
  - salesforce_pull
    - EventSubscriberInterface?
  - salesforce_push
    - EventSubscriberInterface?
  - salesforce_soap

- abstract and rip out as much of old .module files as possible
  
- replace Drupal:: calls in class files with Dependency Injection

- replace strings with consistent, drupal-wide text
  e.g. "-- Select --", "--" . t('Select') . "--", "Select Object Type", etc.
  Nobody wants to translate all those.
  
- Replace hooks with interfaces, plugins, event subscribers, etc.

- Automatically pre-add all required Salesforce fields to mappings
  - require that they be mapped
  - require a key radio button be ticked

- restore Salesforce local action for entities

- Salesforce Push / Salesforce Mapping Object should be turned into a mock fields
  similar to drupal core Path
  - free CRUD operations. get rid of hook_entity_* operations
  - better separation of logic
  - easier for other modules to extend, alter behavior
  - standardized, consolidated approach

- Since Drupal Queue Interface is a properly OOP now, we should create a 
Salesforce Queue implementation that unlocks the full potential of Salesforce API
Whether or not this is dependent on SOAP is somewhat irrelevant, as REST and SOAP
could use the same queue interface, regardless of whether REST can leverage 
the advanced features of SOAP.

- Conversions to do when https://drupal.org/node/1972304 lands

- Migration paths for field mappings
  -- wait for dust to settle on field mapping schema
  
- Migration paths for mapping object
  -- wait for dust to settle on mapping object schema