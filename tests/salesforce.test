<?php

/**
 * @file
 * Simple tests for salesforce
 */

/**
 * Sets up basic tools for testing Salesforce integration.
 */
class SalesforceTestCase extends DrupalWebTestCase {
  /**
   * Implementation of getInfo().
   */
  public static function getInfo() {
    return array(
      'name' => 'Salesforce API',
      'description' => 'Sets up basic tools for testing Salesforce integration',
      'group' => 'Salesforce',
    );
  }

  /**
   * Implementation of setUp().
   */
  public function setUp($modules = array(), $permissions = array()) {
    $modules = array_merge($modules, array(
      'salesforce',
      'salesforce_testing'
    ));
    parent::setUp($modules);

    $permissions = array_merge($permissions, array(
      'administer salesforce',
    ));
    $this->admin_user = $this->drupalCreateUser($permissions);
    $this->drupalLogin($this->admin_user);
    variable_set('drupal_http_request_function', 'salesforce_rest_http_test_function');
  }

  /**
   * Implementation of tearDown().
   */
  public function tearDown() {
    user_cancel(array(), $this->admin_user->uid, 'user_cancel_delete');
    parent::tearDown();
  }

  /**
   * Grabs Salesforce connection information from the live db and authenticates.
   *
   * @return object
   *   Salesforce Object
   */
  protected function salesforceConnect() {
    $testing_variable_values = _salesforce_testing_get_testing_variables();

    foreach ($testing_variable_values as $variable_name => $fake_value) {
      variable_set($variable_name, $fake_value);
    }

    // Test the connection.
    $sfapi = salesforce_get_api();
    if ($sfapi->isAuthorized()) {
      $this->Pass('Connected to Salesforce');
    }
    else {
      $this->Fail('Could not connect to Salesforce.  Ensure the primary site these tests are running against has an authorized connection to Salesforce in order to proceed.');
    }

    // Make a call to Salesforce that will do nothing just so we can get an
    // access token into our session.  This is dumb, but I can't think of any
    // other way to get an access token because refreshToken() is protected.
    $sfapi->apiCall($testing_variable_values['salesforce_endpoint'] . '/services/oauth2/token');

    return $sfapi;
  }

  /**
   * Tests to see if an access token was set.
   */
  public function testSalesforceConnect() {
    $sfapi = $this->salesforceConnect();
    $this->assertTrue($sfapi->getAccessToken());
  }
}


/**
 * Overwrites drupal_http_request() for our tests.
 *
 * @param $url
 * @param array $options
 */
function salesforce_rest_http_test_function($url, array $options = array()) {
  $file_to_load = _salesforce_testing_get_mocks_file_path($url);

  if (file_exists($file_to_load)) {
    $to_return = json_decode(file_get_contents($file_to_load));
  }
  else {
    $to_return = new stdClass();
    $to_return->code = 503;
    $to_return->error = 'Missing mock file for this request for the url:' . $url;
  }

  return $to_return;
}
